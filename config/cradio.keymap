/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

        leftctrl {
            bindings = <&kp LCTRL>;
            key-positions = <20 10>;
        };

        combo_windows {
            bindings = <&kp LEFT_GUI>;
            key-positions = <21 22>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E  &kp R         &kp T                   &kp Y        &kp U                    &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F         &mt LEFT_CONTROL G      &kp H        &kp J                    &kp K      &kp L    &kp SEMICOLON
&kp Z  &kp X  &kp C  &kp V         &kp B                   &kp N        &kp M                    &kp COMMA  &kp DOT  &kp SLASH
                     &kp LEFT_WIN  &mt LEFT_SHIFT SPACE    &lt 2 ENTER  &mt RIGHT_ALT BACKSPACE
            >;
        };

        left_layer {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5            &kp NUMBER_6      &kp N7             &kp N8                &kp N9                 &kp N0
&none         &none         &none         &none         &none             &kp MINUS         &kp EQUAL          &kp NON_US_BACKSLASH  &kp TILDE              &kp SQT
&none         &kp TILDE     &none         &none         &none             &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DEL
                                          &mo 1         &kp LEFT_SHIFT    &kp RGUI          &mo 2
            >;
        };

        right_layer {
            bindings = <
&none  &none     &kp UP_ARROW  &none      &none    &none  &none  &none  &bt BT_CLR_ALL  &bt BT_CLR
&none  &kp LEFT  &kp DOWN      &kp RIGHT  &none    &none  &none  &none  &none           &bt BT_NXT
&none  &none     &none         &none      &none    &none  &none  &none  &none           &bt BT_PRV
                               &mo 3      &none    &none  &mo 2
            >;
        };

        tri_layer {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5     &trans  &trans     &trans        &trans      &trans
&kp F6   &kp F7   &kp F8  &kp F9  &kp F10    &trans  &kp PG_UP  &kp K_VOL_UP  &kp K_MUTE  &trans
&kp F11  &kp F12  &none   &none   &none      &trans  &kp PG_DN  &kp K_VOL_DN  &trans      &trans
                          &trans  &trans     &trans  &trans
            >;
        };
    };
};
